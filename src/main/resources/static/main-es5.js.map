{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/edit-persons/edit-persons.component.ts","webpack:///src/app/edit-persons/edit-persons.component.html","webpack:///src/app/error/error.component.ts","webpack:///src/app/error/error.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/list-persons/list-persons.component.ts","webpack:///src/app/list-persons/list-persons.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/services/person.service.ts","webpack:///src/app/services/route-guard.service.ts","webpack:///src/app/welcome/welcome.component.ts","webpack:///src/app/welcome/welcome.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EditPersonsComponent","ErrorComponent","FooterComponent","ListPersonsComponent","service","headers","now","Date","getListPersons","subscribe","response","listPersons","reloadData","LoginComponent","router","routeGuardService","valid","validMsg","testService","authenticate","username","password","console","log","navigate","onSubmit","MenuComponent","isUserLoggedIn","logout","PersonService","http","url","get","forEach","person","post","trim","map","Map","set","email","has","sessionStorage","setItem","user","getItem","removeItem","providedIn","RouteGuardService","route","state","WelcomeComponent","snapshot","params","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { ListPersonsComponent } from './list-persons/list-persons.component';\nimport { RouteGuardService } from './services/route-guard.service';\n\nconst routes: Routes = [\n\t{path: '', component: LoginComponent},\n\t{path: 'welcome/:username/:password', component: WelcomeComponent, canActivate: [RouteGuardService]},\n\t{path: 'login', component: LoginComponent, canActivate: [RouteGuardService]},\n\t{path: 'list-persons', component: ListPersonsComponent, canActivate: [RouteGuardService]},\n\t\n\t{path: '**', component: ErrorComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\t\n}\n\n\n\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","\n<app-menu></app-menu>\n<br><br>\n\n<div class=\"container container-fluid\">\n\t<router-outlet></router-outlet>\n</div>\n\n<br><br>\n<app-footer></app-footer>\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorComponent } from './error/error.component';\nimport { ListPersonsComponent } from './list-persons/list-persons.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { EditPersonsComponent } from './edit-persons/edit-persons.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    LoginComponent,\n    ErrorComponent,\n    ListPersonsComponent,\n    MenuComponent,\n    FooterComponent,\n    EditPersonsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n\t\tFormsModule,\n\t\tHttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\t\n}\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit-persons',\n  templateUrl: './edit-persons.component.html',\n  styleUrls: ['./edit-persons.component.css']\n})\nexport class EditPersonsComponent implements OnInit {\n\t\n\t\n\t\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\t\n\t\n\t\n}\n\n\n\n\n\n\n\n\n","<p>edit-persons works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\t\n  constructor() {\n\t\t\n\t}\n\t\n  ngOnInit(): void {\n\t\t\n  }\n\t\n}\n\n\n\n\n\n\n\n","<footer class=\"footer\">\n\t<div align = 'center' class=\"\">\n\t\t<span class=\"text-muted\">Place sticky footer content here.</span>\n\t</div>\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { Person } from './../entities/person/person';\nimport { PersonService } from './../services/person.service';\n\n@Component({\nselector: 'app-list-persons',\ntemplateUrl: './list-persons.component.html',\nstyleUrls: ['./list-persons.component.css']\n})\nexport class ListPersonsComponent implements OnInit {\n\t\n\theaders = ['fname', 'lname', 'email', 'password', '', ''];\n\tlistPersons: Person[];\n\tnow: Date = new Date();\n\t\n\tconstructor(private service: PersonService) {\n\t\t\n\t}\n\t\n\treloadData(): void {\n\t\tthis.service.getListPersons().subscribe(\n\t\t\tresponse => {\n\t\t\t\tthis.listPersons = response;\n\t\t\t}\n\t\t);\n\t}\n\t\n\tngOnInit(): void {\n\t\tthis.reloadData();\n\t}\n\t\n\t\n}\n\n\n\n\n\n\n\n","\n<div align='center'>\n\t<table class=\"table table-striped table-hover \" >\n\t  <thead>\n\t    <tr  >\n\t      <th *ngFor=\"let header of headers\" >{{header}}</th>\n\t    </tr>\n\t  </thead>\n\t  <tbody>\n\t    <tr *ngFor=\"let p of listPersons\"  >\n\t\t\t\t<td>{{p.fname}}</td>\n\t\t\t\t<td>{{p.lname}}</td>\n\t\t\t\t<td>{{p.email}}</td>\n\t\t\t\t<td>{{p.password}}</td>\n\t\t\t\t<td><a routerLink='edit?id={{p.id}}' class='btn btn-outline-success'>Edit</a></td>\n\t\t\t\t<td><a routerLink='delete?id={{p.id}}' class='btn btn-outline-danger'>Delete</a></td>\n\t    </tr>\n\t  </tbody>\n\t</table>\n\t\n\t<br><br>\n\t<a routerLink='../list-persons' class=''><h2 >Reresh list-persons</h2></a>\n\t<br><br>\n\n\t<h4>Date : {{now | date | uppercase}}</h4>\n\t<br><br>\n</div>\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PersonService } from './../services/person.service';\nimport { RouteGuardService } from './../services/route-guard.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\t\n\tusername : string;\n\tpassword : string;\n\tvalid : boolean = false;\n\tvalidMsg : string = 'error';\n\t\n  constructor(private service: PersonService, private router: Router, private routeGuardService: RouteGuardService) {\n\t\t\n\t}\n\t\n  ngOnInit(): void {\n\t\t\n  }\n\t\n\tpublic onSubmit() {\n\t\t\n\t\tlet testService = this.service.authenticate(this.username, this.password);\n\t\t\n\t\tif (testService) {\n\t\t\tthis.valid = true;\n\t\t\tthis.validMsg = 'GREAT';\n\t\t\tconsole.log(this.validMsg + '!!!!!!!!!!!!!!!');\n\t\t\tthis.router.navigate(['welcome', this.username, this.password]);\n\t\t}\n\t\telse {\n\t\t\t// this.validMsg = 'error';\n\t\t\tconsole.log(this.validMsg + '!!!!!!!!!!!!!!!');\n\t\t}\n\t}\n\t\n\thandleLogin(): void {\n\t\t\n\t\tlet testService = this.service.authenticate(this.username, this.password);\n\t\t\n\t\tif (testService) {\n\t\t\tthis.valid = true;\n\t\t\tthis.validMsg = 'GREAT';\n\t\t\tconsole.log(this.validMsg + '!!!!!!!!!!!!!!!');\n\t\t\tthis.router.navigate(['welcome', this.username, this.password]);\n\t\t}\n\t\telse {\n\t\t\t// this.validMsg = 'error';\n\t\t\tconsole.log(this.validMsg + '!!!!!!!!!!!!!!!');\n\t\t}\n\t}\n\t\n}\n\n\n\n\n\n\n","\n<small *ngIf='!valid' >{{validMsg}}</small>\n<form (ngSubmit)=\"onSubmit()\" #userForm=\"ngForm\" class=\"form-horizontal\">\n\t<fieldset>\n\t\t<legend>Legend</legend>\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"inputEmail\" class=\"col-lg-2 control-label\">Username</label>\n\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"inputEmail\" placeholder=\"Enter mail..\" name='username' [(ngModel)]='username' />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<label for=\"inputPassword\" class=\"col-lg-2 control-label\">Password</label>\n\t\t\t<div class=\"col-lg-10\">\n\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"inputPassword\" placeholder=\"Enter passwd..\" name='password' [(ngModel)]='password'  />\n\t\t\t\t<div align='center' class=\"checkbox\"> <br>\n\t\t\t\t\t<label> <input type=\"checkbox\"> Show Password </label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"form-group\">\n\t\t\t<div align=center class=\"col-lg-10 col-lg-offset-2\">\n\t\t\t\t<button type='submit' [disabled]=\"!userForm.form.valid\" class=\"btn btn-primary\">Login</button>\n\t\t\t</div>\n\t\t</div>\n\t</fieldset>\n</form>\n\n<h1>{{username}}</h1>\n<h1>{{password}}</h1>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { PersonService } from './../services/person.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\t\n  constructor(private service: PersonService) {\n\t\t\n\t}\n\t\n  ngOnInit() {\n\t\t\n  }\n\t\n\tisUserLoggedIn(): boolean {\n\t\treturn this.service.isUserLoggedIn();\n\t}\n\t\n\tlogout(): void {\n\t\tthis.service.logout();\n\t}\n\t\n}\n\n\n\n\n\n\n\n","\n<header>\n\t\n\t<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n\t  <a class=\"navbar-brand\" routerLink=\"/login\">SpringBoot&Angular</a>\n\t  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n\t    <span class=\"navbar-toggler-icon\"></span>\n\t  </button>\n\n\t  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n\t    <ul class=\"navbar-nav mr-auto\">\n\t      <li *ngIf=\"isUserLoggedIn()\"  class=\"nav-item active\">\n\t        <a class=\"nav-link\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\n\t      </li>\n\t      <li *ngIf=\"isUserLoggedIn()\" class=\"nav-item\">\n\t        <a class=\"nav-link\" routerLink=\"/list-persons\">List Persons</a>\n\t      </li>\n\t    </ul>\n\t\t\t<ul class='navbar-nav navbar-collapse justify-content-end' >\n\t\t\t\t<li *ngIf=\"!isUserLoggedIn()\" >\n\t        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n\t      </li>\n\t\t\t\t<li *ngIf=\"isUserLoggedIn()\" >\n\t        <a class=\"nav-link\" (click)='logout()' routerLink=\"/login\">Logout</a>\n\t      </li>\n\t\t\t</ul>\n\t    <div class=\"form-inline my-2 my-lg-0\">\n\t\t\t\t\n\t    </div>\n\t  </div>\n\t</nav>\n\t\n</header>\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { Person } from './../entities/person/person';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\t\n\tprivate listPersons: Person[];\n\tprivate url: string;\n\t\n  constructor(private http: HttpClient) {\n\t\tthis.url = 'http://localhost:8080/persons';\n\t}\n\t\n\tpublic getListPersons(): Observable<Person[]> {\n\t\treturn this.http.get<Person[]>(this.url);\n\t}\n\t\n\tpublic getPersonById(id: number): Person {\n\t\tthis.listPersons.forEach(person => {\n\t\t\tif (person.id === id) {\n\t\t\t\treturn person;\n\t\t\t}\n\t\t});\n\t\treturn null;\n\t}\n\t\n\tpublic savePerson(person: Person): Observable<Person> {\n\t\treturn this.http.post<Person>(this.url, person);\n\t}\n\t\n\tpublic authenticate(username: string, password: string): boolean {\n\t\t\n\t\tthis.getListPersons().subscribe(\n\t\t\tresponse => {\n\t\t\t\tthis.listPersons = response;\n\t\t\t}\n\t\t);\n\t\tusername = username.trim();\n\t\tlet map: Map<string, string> = new Map<string, string>();\n\t\t\n\t\tthis.listPersons.forEach(person => {\n\t\t\tmap.set(person.email, person.password);\n\t\t});\n\t\t\n\t\tif ( !map.has(username) ) {\n\t\t\tconsole.log('there is no such mail !!!!!');\n\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tif ( map.get(username) != password ) {\n\t\t\t\tconsole.log('incorrect password, try again !!!!!');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( map.get(username) === password ) {\n\t\t\t\t\tconsole.log('Logged in, enjoyyy');\n\t\t\t\t\tsessionStorage.setItem('userAuth', username);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log('ERROR !!!!!!!!!!!!!!!');\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tisUserLoggedIn(): boolean {\n\t\tlet user = sessionStorage.getItem('userAuth');\n\t\treturn !(user === null);\n\t}\n\t\n\tlogout(): void {\n\t\tsessionStorage.removeItem('userAuth');\n\t}\n\t\n}\n\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { PersonService } from './person.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate {\n\t\n  constructor(private service: PersonService, private router: Router) {\n\t\t\n\t}\n\t\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\t\t\n\t\tif (this.service.isUserLoggedIn())\n\t\t\treturn true\n\t\t\n\t\tthis.router.navigate(['login']);\n\t\treturn false;\n\t}\n\t\n}\n\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PersonService } from './../services/person.service';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\t\n\tusername: string = '';\n\tpassword: string = '';\n\t\n  constructor(private service: PersonService, private route: ActivatedRoute) {\n\t\t\n\t}\n\n  ngOnInit(): void {\n\t\tthis.username = this.route.snapshot.params['username'];\n\t\tthis.password = this.route.snapshot.params['password'];\n  }\n\t\n\t\n\t\n}\n\n\n\n\n\n\n","\n<p>welcome works!</p><br>\n<h1> {{username}} </h1>\n<h1> {{password}} </h1>\n\n<h3><a class='btn btn-outline-success' routerLink='/list-persons' > Go to list-persons ? </a></h3>\n\n<br><br><br>\n<!-- <app-login></app-login> -->\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}